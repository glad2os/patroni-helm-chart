POSTGRES_PASSWORD: "postgres"
POSTGRES_USER: "postgres"
REPLICATION_PASSWORD: "replication"
REPLICATION_USER: "replication"
REWIND_PASSWORD: "rewind"
REWIND_USER: "rewind"

image:
  repository: harbor.softlogic.ai/library/patroni
  pullPolicy: Always

imagePullSecrets: []

pvc:
  storageClassName: "longhorn-default"
  postgres:
    resources:
      requests:
        storage: 1Gi
  raft: 
    resources:
      requests:
        storage: 1Gi

replicaCount: 3

# Use for extra pod annotations
podAnnotations: 
  app: patroni

# Use for extra pod labels
podLabels:
  app: patroni

initContainers:
  command: ["sh", "-c", "mkdir -p /home/venv/ && cd /home/venv/ && sh ./generator.sh"]
  # Use for extra env variables
  extraEnv: []
  # - name: TEST_VARIABLE
  #   value: test_value
  volumeMounts: []

patroni:
  command: ["/home/venv/bin/patroni", "/home/venv/config/config.yml"]
  extraPorts: []
    # - containerPort: 1337
    #   name: custom-port
  # Use for extra env variables
  extraEnv: []
  # - name: TEST_VARIABLE
  #   value: test_value

securityContext: 
  global:
    fsGroup: 1001
    fsGroupChangePolicy: "Always"
  initContainers:
    runAsUser: 0
  patroni:
    runAsUser: 1001
    runAsGroup: 1001

service:
  type: ClusterIP
  # Use for extra annotations
  annotations: []
  # Use for extra ports
  extraPorts: []
    # - port: 1337
    #   targetPort: 1337
    #   protocol: TCP
    #   name: custom-port

serviceAccount:
  create: true
  automount: true

# Use for extra volumes
extraVolumes: []
# - name: custom-config
#   configMap:
#     name: custom-config

# Use for extra volume mounts
extraVolumeMounts: []
# - name: custom-config
#   mountPath: /home/venv/config.yml
#   subPath: config.yml

# Use for affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/production
              operator: Exists
